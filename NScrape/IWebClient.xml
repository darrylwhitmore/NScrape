<IWebClient>
  <AddingCookie>
    <summary>
      Occurs when a cookie is added to the <see cref="CookieJar"/>.
    </summary>
    <remarks>
      As the <see cref="WebClient"/> executes requests and receives cookies from the server in response, it stores
      them in its cookie jar (a <see cref="CookieContainer"/>) and sends them along on subsequent requests.
    </remarks>
    <seealso cref="CookieJar"/>
    <seealso cref="AddingCookieEventArgs"/>
  </AddingCookie>

  <SendingRequest>
    <summary>
      Occurs when a request is being sent.
    </summary>
    <remarks>
      Use this event to be notified when the <see cref="WebClient"/> sends a request.
    </remarks>
    <seealso cref="SendingRequestEventArgs"/>
  </SendingRequest>

  <ResponseReceived>
    <summary>
      Occurs when a response has been received.
    </summary>
    <remarks>
      Use this event to be notified when the <see cref="IWebClient"/> receives a response.
    </remarks>
  </ResponseReceived>
  
  <CookieJar>
    <summary>
      Gets the cookies that have been collected by the <see cref="WebClient"/> in the course of executing requests.
    </summary>
    <remarks>
      As the <see cref="WebClient"/> executes requests and receives cookies from the server in response, it stores
      them in its cookie jar (a <see cref="CookieContainer"/>) and sends them along on subsequent requests.
      <br/><br/>
      To be notified when a cookie is added to the jar, subscribe to the <see cref="AddingCookie"/> event.
    </remarks>
    <seealso cref="AddingCookie"/>
  </CookieJar>

  <SendRequest_Uri>
    <summary>
      Sends a GET request.
    </summary>
    <param name="destination">Specifies the destination of the request.</param>
    <remarks>
      Sends a GET request that shall be automatically redirected if applicable.
    </remarks>
    <returns>The response from the server.</returns>
    <example>
      <code>
        var webClient = new WebClient();

        var uri = new Uri( "http://www.foo.com" );

        var response = webClient.SendRequest( uri );
      </code>
    </example>
    <seealso cref="WebResponse"/>
  </SendRequest_Uri>

  <SendRequest_Uri_bool>
    <summary>
      Sends a GET request, specifying redirection.
    </summary>
    <param name="destination">Specifies the destination of the request.</param>
    <param name="autoRedirect">
      <b>true</b> if the request should be automatically redirected; <b>false</b> otherwise.
    </param>
    <remarks>
      Sends a GET request, specifying whether the request shall be automatically redirected if applicable.
    </remarks>
    <returns>The response from the server.</returns>
    <example>
      <code>
        var webClient = new WebClient();

        var uri = new Uri( "http://www.foo.com" );

        var response = webClient.SendRequest( uri, false );
      </code>
    </example>
    <seealso cref="WebResponse"/>
  </SendRequest_Uri_bool>

  <SendRequest_Uri_string>
    <summary>
      Sends a POST request.
    </summary>
    <param name="destination">Specifies the destination of the request.</param>
    <param name="requestData">
      Contains the request data in <b>application/x-www-form-urlencoded</b> format.
    </param>
    <remarks>
      Sends a POST request that shall be automatically redirected if applicable.
    </remarks>
    <returns>The response from the server.</returns>
    <example>
      <code>
        var webClient = new WebClient();

        var uri = new Uri( "http://www.foo.com" );
        var data = "step=confirmation&amp;rt=L&amp;rp=%2Flogin%2Fhome&amp;p=0&amp;inputEmailHandle=foo&amp;inputPassword=bar";

        var response = webClient.SendRequest( uri, data );
      </code>
    </example>
    <returns>The response from the server.</returns>
    <seealso cref="WebResponse"/>
  </SendRequest_Uri_string>

  <SendRequest_Uri_string_bool>
    <summary>
      Sends a POST request, specifying redirection.
    </summary>
    <param name="destination">Specifies the destination of the request.</param>
    <param name="requestData">
      Contains the request data in <b>application/x-www-form-urlencoded</b> format.
    </param>
    <param name="autoRedirect">
      <b>true</b> if the request should be automatically redirected; <b>false</b> otherwise.
    </param>
    <remarks>
      Sends a POST request, specifying whether the request shall be automatically redirected if applicable.
    </remarks>
    <returns>The response from the server.</returns>
    <example>
      <code>
        var webClient = new WebClient();

        var uri = new Uri( "http://www.foo.com" );
        var data = "step=confirmation&amp;rt=L&amp;rp=%2Flogin%2Fhome&amp;p=0&amp;inputEmailHandle=foo&amp;inputPassword=bar";

        var response = webClient.SendRequest( uri, data, false );
      </code>
    </example>
    <returns>The response from the server.</returns>
    <seealso cref="WebResponse"/>
  </SendRequest_Uri_string_bool>

  <SendRequest_WebRequest>
    <summary>
      Sends a GET or POST request.
    </summary>
    <param name="webRequest">The request to send.</param>
    <remarks>
      Sends a GET or POST request.
    </remarks>
    <returns>The response from the server.</returns>
    <example>
      <code>
        var webClient = new WebClient();

        var request = new PostWebRequest() {
        Destination = new Uri( "http://www.foo.com" ),
        RequestData = "step=confirmation&amp;rt=L&amp;rp=%2Flogin%2Fhome&amp;p=0&amp;inputEmailHandle=foo&amp;inputPassword=bar"
        };

        var response = webClient.SendRequest( request );
      </code>
    </example>
    <seealso cref="WebRequest"/>
    <seealso cref="WebResponse"/>
  </SendRequest_WebRequest>

  <UserAgent>
    <summary>
      Gets or sets the user agent for requests made by a <see cref="WebClient"/>.
    </summary>
    <remarks>
      If the user agent is not explicitly set, it defaults to a string of the form: <code>NScrape/[version] (+https://github.com/darrylwhitmore/NScrape)</code>
    </remarks>
    <example>
      <code>
        var webClient = new WebClient {
        UserAgent = "Mozilla/5.0 (Windows NT 6.1; WOW64; Trident/7.0; rv:11.0) like Gecko"
        };
      </code>
    </example>
  </UserAgent>
</IWebClient>